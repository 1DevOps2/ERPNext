name: deploy Erp app

on:
  push:
    branches: [ "erpnext-with-github-actions" ]

jobs:
  deploy-erp:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
            
    - name: Deploy to the server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        timeout: 1700s
        script: |

            # installing docker & docker-compose
            # for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
            # sudo apt-get update
            # sudo apt-get install ca-certificates curl gnupg
            # sudo install -m 0755 -d /etc/apt/keyrings
            # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            # sudo chmod a+r /etc/apt/keyrings/docker.gpg
            # echo \
            #   "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            #   "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
            #   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            # sudo apt-get update 
            # sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

            # installing /git
            # sudo apt-get install git -y

            # clone the project
            git clone -b erpnext-with-github-actions https://github.com/1DevOps2/ERPNext.git 

            # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition.
            # sudo sysctl vm.overcommit_memory=1

            # navigate toe cloned repoo
            cd ERPNext 

            # run docker-compose
            docker-compose up --build -d

            # Wait for containers to be healthy
            while [ "$(docker-compose ps -q | xargs docker inspect -f '{{.State.Health.Status}}')" != "healthy" ]; do
            echo "Waiting for containers to be healthy..."
            sleep 10
            done

            # exit the machine
            exit


    - name: cleanup
      run: rm -rf ~/.ssh
